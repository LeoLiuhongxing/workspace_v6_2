/*
 * UARTA0.c
 *
 *  Created on: 2017年12月20日
 *      Author: leo
 */
#include <msp430.h>
#include "UARTA0.h"

#define QUEUE_SIZE 64

unsigned char switch_number1_flag = 0;//判断switch 1的状态？？？？？

struct
{
	volatile unsigned char head;
	volatile unsigned char tail;
    volatile unsigned char data[QUEUE_SIZE];
}receive_queue;



void UART0_Init(void)
{
  P2SEL |= BIT4+BIT5;                       // P2.4,5 UART option select
  UCA0CTL1 |= UCSSEL_1;                     // CLK = ACLK
  UCA0BR0 = 0x03;                           // 32k/9600 - 3.41
  UCA0BR1 = 0x00;                           //
  UCA0MCTL = 0x06;                          // Modulation
  UCA0CTL1 &= ~UCSWRST;                     // **Initialize USCI state machine**
  IE2 |= UCA0RXIE;                 // Enable USCI_A0 TX/RX interrupt

  __bis_SR_register(LPM3_bits + GIE);       // Enter LPM3 w/ interrupts enabled
}

unsigned char Get_Baudrate(void)
{
	return (switch_number1_flag);//0:9600 1:4800 2:2400 3:1200
}

void Set_baudrate(unsigned char baudrate)
{
	switch(baudrate)
	{
		case BAUDARATE9600:
			break;
		case BAUDARATE4800:
			break;
		case BAUDARATE2400:
			break;
		case BAUDARATE1200:
			break;

}



#if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)
#pragma vector=USCIAB0RX_VECTOR
__interrupt void USCI_A0_RX (void)
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCIAB0RX_VECTOR))) USCI_A0_RX (void)
#else
#error Compiler not supported!
#endif
{
	receive_queue.data[receive_queue.tail] = UCA0RXBUF;                        // RXBUF1 to TXBUF1
	receive_queue.tail++;
	if(receive_queue.tail >= QUEUE_SIZE)
		receive_queue.tail = 0;

}

void USCI_A0_TX (char* buffer, unsigned char size)
{
	unsigned char i = 0;
	for(i=0;i<size;i++)
	{
		while(!(IFG2&UCA0TXIFG));
		UCA0TXBUF = buffer[i];// Transmit character
	}
}



